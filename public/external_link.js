/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 9);
/******/ })
/************************************************************************/
/******/ ({

/***/ "./resources/assets/builder/external_link.js":
/*!***************************************************!*\
  !*** ./resources/assets/builder/external_link.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar ExternalLink = /*#__PURE__*/function () {\n  function ExternalLink() {\n    _classCallCheck(this, ExternalLink);\n  }\n\n  _createClass(ExternalLink, null, [{\n    key: \"init\",\n    value: function init(config) {\n      var _this = this;\n\n      this.placeholder = {\n        title: '',\n        body: 'You are now leaving a Pfizer-operated website. Links to all outside sites are provided as a resource to our visitors. Pfizer accepts no responsibility for the content of sites that are not owned and operated by Pfizer.',\n        \"continue\": 'Go to link',\n        cancel: 'Cancel'\n      };\n      this.lang = document.querySelector('html').lang || '';\n      this.whitelist = config.whitelist;\n      this.primaryPopup = null;\n      this.overridePopups = [];\n      this.overridePopupsAny = [];\n\n      if (Array.isArray(config.popups)) {\n        this.primaryPopup = config.popups.find(function (popup) {\n          return popup.type === 'primary' && popup.language === _this.lang;\n        });\n\n        if (!this.primaryPopup) {\n          this.primaryPopup = config.popups.find(function (popup) {\n            return popup.type === 'primary' && popup.language === 'any';\n          });\n        }\n\n        if (!this.primaryPopup) {\n          return;\n        }\n\n        this.overridePopups = config.popups.filter(function (popup) {\n          return popup.type === 'override' && popup.enabled && popup.language === _this.lang;\n        });\n        this.overridePopupsAny = config.popups.filter(function (popup) {\n          return popup.type === 'override' && popup.enabled && popup.language === 'any';\n        });\n      }\n\n      this.helixContainer = document.querySelector('#helix-container');\n\n      if (!this.helixContainer) {\n        this.helixContainer = document.createElement('div');\n        this.helixContainer.id = 'helix-container';\n        document.body.appendChild(this.helixContainer);\n      }\n\n      this.attach();\n    }\n  }, {\n    key: \"attach\",\n    value: function attach() {\n      var _this2 = this;\n\n      // Strip the host name down, removing ports, subdomains, or www.\n      // eslint-disable-next-line no-useless-escape\n      var pattern = /^((http[s]?|ftp):\\/\\/)?\\/?([^\\/\\.]+\\.)*?([^\\/\\.]+\\.[^:\\/\\s\\.]{2,3}(\\.[^:\\/\\s\\.]{2,3})?(:\\d+)?)($|\\/)([^#?\\s]+)?(.*?)?(#[\\w\\-]+)?$/;\n      var host = window.location.host.replace(pattern, '$4');\n      var subdomainPattern = '([^/]*\\\\.)?'; // Whitelisted domains.\n\n      if (this.primaryPopup.whitelist) {\n        var array = this.primaryPopup.whitelist.split('\\n');\n        var whitelistedDomains = [];\n\n        for (var i = 0; i < array.length; i++) {\n          var whitelistPattern = array[i].replace(/(\\r\\n|\\n|\\r)/gm, '');\n\n          if (whitelistPattern) {\n            whitelistPattern = whitelistPattern.replace('*', '.*');\n            whitelistedDomains.push(new RegExp(\"^https?:\\\\/\\\\/\".concat(whitelistPattern, \".*$\"), 'i'));\n          }\n        }\n\n        this.primaryPopup.whitelistedDomains = whitelistedDomains;\n      } // Blacklisted domains\n\n\n      this.overridePopups.map(function (popup) {\n        var array = popup.blacklist.split('\\n');\n        var blacklistedDomains = [];\n\n        for (var _i = 0; _i < array.length; _i++) {\n          var blacklistPattern = array[_i].replace(/(\\r\\n|\\n|\\r)/gm, '');\n\n          if (blacklistPattern) {\n            blacklistPattern = blacklistPattern.replace('*', '.*');\n            blacklistedDomains.push(new RegExp(\"^https?:\\\\/\\\\/\".concat(blacklistPattern, \".*$\"), 'i'));\n          }\n        }\n\n        popup.blacklistedDomains = blacklistedDomains;\n        return popup;\n      });\n      this.overridePopupsAny.map(function (popup) {\n        var array = popup.blacklist.split('\\n');\n        var blacklistedDomains = [];\n\n        for (var _i2 = 0; _i2 < array.length; _i2++) {\n          var blacklistPattern = array[_i2].replace(/(\\r\\n|\\n|\\r)/gm, '');\n\n          if (blacklistPattern) {\n            blacklistPattern = blacklistPattern.replace('*', '.*');\n            blacklistedDomains.push(new RegExp(\"^https?:\\\\/\\\\/\".concat(blacklistPattern, \".*$\"), 'i'));\n          }\n        }\n\n        popup.blacklistedDomains = blacklistedDomains;\n        return popup;\n      }); // Build regular expressions that define an internal link.\n\n      var internalLink = new RegExp(\"^https?://([^@]*@)?\".concat(subdomainPattern).concat(host), 'i');\n      document.body.addEventListener('click', function (ev) {\n        var target = ev.composedPath().find(function (target) {\n          return target.tagName === 'A';\n        });\n\n        if (target) {\n          var url = target.href;\n\n          if (_this2.primaryPopup.whitelistedDomains && Array.isArray(_this2.primaryPopup.whitelistedDomains)) {\n            var index = _this2.primaryPopup.whitelistedDomains.findIndex(function (domain) {\n              return domain.test(url);\n            });\n\n            if (index > -1) {\n              return;\n            }\n          }\n\n          if (url.indexOf('http') === 0 && !internalLink.test(url)) {\n            ev.preventDefault();\n\n            _this2.showModal(target.href);\n          }\n        }\n      });\n    }\n  }, {\n    key: \"showModal\",\n    value: function showModal(href) {\n      var _this3 = this;\n\n      var popup = this.overridePopups.find(function (popup) {\n        return popup.blacklistedDomains.findIndex(function (domain) {\n          return domain.test(href);\n        }) > -1;\n      });\n\n      if (!popup) {\n        popup = this.overridePopupsAny.find(function (popup) {\n          return popup.blacklistedDomains.findIndex(function (domain) {\n            return domain.test(href);\n          }) > -1;\n        });\n      }\n\n      var values = {\n        title: this.primaryPopup.title ? this.primaryPopup.title : this.placeholder.title,\n        body: this.primaryPopup.body ? this.primaryPopup.body : this.placeholder.body,\n        \"continue\": this.primaryPopup[\"continue\"] ? this.primaryPopup[\"continue\"] : this.placeholder[\"continue\"],\n        cancel: this.primaryPopup.cancel ? this.primaryPopup.cancel : this.placeholder.cancel,\n        style: this.primaryPopup.style\n      };\n\n      if (popup) {\n        values.title = popup.title ? popup.title : this.placeholder.title;\n        values.body = popup.body ? popup.body : this.placeholder.body;\n        values[\"continue\"] = popup[\"continue\"] ? popup[\"continue\"] : this.placeholder[\"continue\"];\n        values.cancel = popup.cancel ? popup.cancel : this.placeholder.cancel;\n        values.style = popup.style ? popup.style : values.style;\n      }\n\n      if (values.style === 'helix') {\n        this.helixContainer.innerHTML = \"\\n                <helix-ext-link id=\\\"helix-ext-popup\\\" has-crest whitelist=\\\"/\\\" has-brand-stripe cancel-text=\\\"\".concat(values.cancel, \"\\\" go-to-link-text=\\\"\").concat(values[\"continue\"], \"\\\">\\n                    <div slot=\\\"label\\\">\").concat(values.title, \"</div>\\n                    <div slot=\\\"message\\\">\").concat(values.body, \"</div>\\n                </helix-ext-link>\\n            \");\n        var helix = document.querySelector('#helix-ext-popup');\n\n        if (helix.trigger && typeof helix.trigger === 'function') {\n          helix.trigger(href, '_blank');\n        }\n\n        var interval = setInterval(function () {\n          helix.shadowRoot.querySelectorAll('helix-button').forEach(function (element) {\n            clearInterval(interval);\n            element.addEventListener('click', function () {\n              _this3.helixContainer.innerHTML = '';\n            });\n          });\n        });\n        setTimeout(function () {\n          clearInterval(interval);\n        }, 10000);\n        return;\n      }\n\n      var html = \"<div class=\\\"modal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\">\\n                        <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n                            <div class=\\\"modal-content\\\">\\n                                <div class=\\\"modal-header\\\">\\n                                    <h5 class=\\\"modal-title\\\">\".concat(values.title, \"</h5>\\n                                    <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n                                        <span aria-hidden=\\\"true\\\">&times;</span>\\n                                    </button>\\n                                </div>\\n                                <div class=\\\"modal-body\\\">\\n                                    \").concat(values.body, \"\\n                                </div>\\n                                <div class=\\\"modal-footer\\\">\\n                                    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\">\").concat(values[\"continue\"], \"</button>\\n                                    <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">\").concat(values.cancel, \"</button>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\");\n\n      if (!this.container) {\n        this.container = document.createElement('div');\n        this.container.id = 'external-link-modal';\n        document.body.appendChild(this.container);\n      } // Set HtML and show it.\n\n\n      this.container.innerHTML = html;\n      this.container.firstChild.style.display = 'block';\n      var that = this;\n      this.container.querySelector('button.btn-primary').addEventListener('click', function (e) {\n        that.destroyModal();\n        window.open(href, '_blank');\n      });\n      this.container.querySelector('button.btn-secondary').addEventListener('click', function (e) {\n        that.destroyModal();\n      });\n      this.container.querySelector('button.close').addEventListener('click', function (e) {\n        that.destroyModal();\n      });\n    }\n  }, {\n    key: \"destroyModal\",\n    value: function destroyModal() {\n      document.body.removeChild(this.container);\n      this.container = null;\n    }\n  }]);\n\n  return ExternalLink;\n}();\n\nwindow.externalLink = ExternalLink;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/assets/builder/external_link.js\n");

/***/ }),

/***/ 9:
/*!*********************************************************!*\
  !*** multi ./resources/assets/builder/external_link.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! /Users/01hw1501473/canvas/dream-well/resources/assets/builder/external_link.js */"./resources/assets/builder/external_link.js");


/***/ })

/******/ });